[project]
name = "dolist"
version = "0.4.1"
description = "To-Do list on Command Line Interface"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Bruno Rocha", email = "rochacbruno@gmail.com"}
]
keywords = ["todo", "cli", "task", "productivity", "dolist"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Utilities",
]

dependencies = [
    "termcolor>=2.0.0",
    "cyclopts>=3.0.0",
    "rich>=13.0.0",
    "textual>=1.0.0",
    "pydantic>=2.0.0",
    "ptpython>=3.0.0",
    "tomli>=2.0.0; python_version<'3.11'",
]

[project.urls]
Homepage = "https://github.com/rochacbruno/dolist"
Repository = "https://github.com/rochacbruno/dolist"
Issues = "https://github.com/rochacbruno/dolist/issues"
PyPI = "https://pypi.org/project/dolist/"

[project.scripts]
dolist = "dolist.do:main_entry"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["dolist"]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[tool.pytest.ini_options]
# Pytest configuration
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output options
addopts = [
    "-v",                    # Verbose output
    "-ra",                   # Show summary of all test outcomes
    "--showlocals",          # Show local variables in tracebacks
    "--strict-markers",      # Strict markers
]

# Markers for categorizing tests
markers = [
    "unit: Unit tests that test individual components",
    "integration: Integration tests that test multiple components together",
    "slow: Tests that take a long time to run",
    "requires_db: Tests that require database access",
]

# Warning filters
filterwarnings = [
    "ignore::SyntaxWarning",
]

# Console output format
console_output_style = "progress"

# Don't search these directories
norecursedirs = [".git", ".venv", "__pycache__", "*.egg-info", "build", "dist"]
